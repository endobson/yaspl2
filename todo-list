
In progress:

Things to do:
Fix bootstrap compiler on exported patterns
Make linker fail if there are unbound symbols at the end

In libraries:
Make subbytes/bytes-copy! fast
change all mains to accept environment.
make prim-signature not tied to prim-implementation

In compiler:
Add tests for validator.
Make regexp for matching the whole string not be an element in the list of matches.
Allow rename on export
make boolean patterns accepted
remove trivial constraint from unification error messages
Make polymorphic calls work in more cases.
  * add annotations for let
  * support instantiation of polymorphic type
Check bytes length when doing reads/writes
Make #; comments work
Make polymorphic function inference not crash compiler
  'polymorphic functions constraints not yet implemented'
Make duplicate field names in typed defintions not crash compiler.
Do 'cuts' when parsing after seeing keyword.
Clean up: function-definition->assembly-fragment.
stop using tuple for named arg types
non polymorphic function should push argument expectations down even if it doesn't match its expectation
Trimming signature to only exported names or ones visable via inlining. This will reduce rebuilding
Print types nicer if there isn't a chance of confusion.
Add return and scoped return blocks.
Make just self calls not inifinte loop the compiler
Make all modules use full path naming scheme
Make bootstrapping use yaspl built assembler/linker
Improve error message "Got pattern for different type"
Add OR patterns
Push expectations down in monomorphic function call even if return type is wrong.
Improve error message for bad return type
Make compilation of large functions faster
Remove duplicate implementation of int-cmp
Push expectations down into varargs
Pattern didn't match any terms doesn't include which clause is at fault
bytes-ref/quad-le should be turned into bytes-ref/u32-le
Make yunit print escaped strings.

Crash bugs:
Library compiler on duplicate modules



In test suites:
Provide better scoping of error messages.

In linter:
Warn about unused datatypes.
Do global analysis to find unused exported bindings
Make linter check indentation of imports
Warn about files unused by build rules

In tools:
Answer question of where is variable used.
Add import when well known binding is unbound.

Migrate modules to multipart names as appropriate

Improve optimizations
u8 should be able to optimize known constants
byte extraction of U32/U64 should be a primop
variable optimization in pattern matching
spliting matrix optimization in pattern matching
same symbol optimized to one load
Merge similar blocks
known variants should be decomposed
Make 0arg variant construction -> constant reference be an optimizaton

WebASM project:
Program that takes expression in the sexpression form and generates
web-asm program that computes that sexpression.
Support i32, +, *, -, quotient.
Support local variables.
Support input variables.
Js page that allows sending form to server and getting it back and rendering it.
JS page that allows loading up the response in browser and running it.
