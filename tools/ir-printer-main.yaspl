#:module (ir-printer-main)
#:import {
  (bytes)
  (io)
  (list)
  (prim)
}
(export)
(types)

(define (handle-failure-result [msg : Bytes] [stderr : OutputPort]) : Int
  (begin
    (write-line msg stderr)
    1))

(define (main [args : (Array Bytes)] [stdin : InputPort] [stdout : OutputPort] [stderr : OutputPort]) : Int
  (case (array->list args)
    [(empty)
     (handle-failure-result #"No binary!?" stderr)]
    [(cons _ (empty))
     (handle-failure-result #"No module file provided." stderr)]
    [(cons _ (cons _ (empty)))
     (handle-failure-result #"No output directory provided." stderr)]
    [(cons _ (cons module-file (cons output-directory signature-files)))
     (begin
       (make-directory output-directory)
       (call-with-output-file (bytes-append (varargs list output-directory #"/" #"foo"))
         (lambda ([port : OutputPort]) (void)))
       (call-with-output-file (bytes-append (varargs list output-directory #"/" #"bar"))
         (lambda ([port : OutputPort]) (void)))
       0)]))
