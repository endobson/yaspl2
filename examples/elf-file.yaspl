#:module (elf-file)
#:import {
  (aligned-bytes)
  (bytes)
  (formats elf)
  (io)
  (list)
  (prim)
  (structured-native-code)
}
(export)
(types)

(define (main [args : (Array Bytes)] [stdin : InputPort] [stdout : OutputPort] [stderr : OutputPort]) : Int
  (case (array->list args)
    [(cons _ (cons output-file1
                   (cons output-file2
                         (cons output-file3
                               (cons output-file4
                                     (cons output-file5
                                           (cons output-file6
                                                 (cons output-file7 (empty)))))))))
     (begin
       (call-with-output-file/void output-file1
         (lambda ([p : OutputPort]) : Void
           (write-all-bytes
             (serialize-elf-library
               (program-section
                 (aligned-bytes #"" 0)
                 (empty)
                 (empty)
                 (empty)))
             p)))
       (call-with-output-file/void output-file2
         (lambda ([p : OutputPort]) : Void
           (write-all-bytes
             (serialize-elf-library
               (program-section
                 (aligned-bytes #"\xC3\x90\xC3" 0)
                 (empty)
                 (varargs list
                   (defined-symbol #"fun1" 0)
                   (defined-symbol #"fun2" 1))
                 (empty)))
             p)))
       (call-with-output-file/void output-file3
         (lambda ([p : OutputPort]) : Void
           (write-all-bytes
             (serialize-elf-library
               (program-section
                 (aligned-bytes
                   (bytes-append
                     (varargs list
                       #"\xE8\x00\x00\x00\x00"
                       #"\xE8\x00\x00\x00\x00"
                       #"\xE8\x00\x00\x00\x00"
                       ))
                   0)
                 (varargs list
                   (relocation (branch-relocation) 1 #"ccc")
                   (relocation (branch-relocation) 6 #"aaa")
                   (relocation (branch-relocation) 11 #"bbb"))
                 (varargs list
                   (defined-symbol #"aaa" 0)
                   (defined-symbol #"bbb" 5)
                   (defined-symbol #"ccc" 10))
                 (empty)))
             p)))
       (call-with-output-file/void output-file4
         (lambda ([p : OutputPort]) : Void
           (write-all-bytes
             (serialize-elf-library
               (program-section
                 (aligned-bytes
                   (bytes-append
                     (varargs list
                       #"\xFF\x14\x25\x00\x00\x00\x00\x90\xC3"
                       #"\x90\x90\x90\xC3"
                       ))
                   0)
                 (varargs list
                   (relocation (signed-relocation) 3 #"bar"))
                 (varargs list
                   (defined-symbol #"foo" 0)
                   (defined-symbol #"bar" 9)
                   )
                 (empty)))
             p)))
       (call-with-output-file/void output-file5
         (lambda ([p : OutputPort]) : Void
           (write-all-bytes
             (serialize-elf-library
               (program-section
                 (aligned-bytes
                   (bytes-append
                     (varargs list
                       #"\xFF\x14\x25\x00\x00\x00\x00\x90\xC3"
                       (make-bytes 200)
                       #"\xFF\x24\x25\x00\x00\x00\x00"
                       #"\xE9\x23\xFF\xFF\xFF\x90\xC3"
                       ))
                   0)
                 (varargs list
                   (relocation (signed-relocation) 3 #"bar")
                   (relocation (signed-relocation) 212 #"foo"))
                 (varargs list
                   (defined-symbol #"foo" 0)
                   (defined-symbol #"bar" 209))
                 (empty)))
             p)))
       (call-with-output-file/void output-file6
         (lambda ([p : OutputPort]) : Void
           (write-all-bytes
             (serialize-elf-library
               (program-section
                 (aligned-bytes
                   (bytes-append
                     (varargs list
                       #"\xFF\x24\x25\x00\x00\x00\x00"
                       #"\xE9\x00\x00\x00\x00"
                       #"\xE9\x00\x00\x00\x00"
                       #"\xE9\x00\x00\x00\x00"
                       #"\xE9\x00\x00\x00\x00"
                       ))
                   0)
                 (varargs list
                   (relocation (signed-relocation) 3 #"baz")
                   (relocation (branch-relocation) 8 #"e_def")
                   (relocation (branch-relocation) 13 #"e_abc")
                   (relocation (branch-relocation) 18 #"e_ghi")
                   (relocation (branch-relocation) 23 #"e_abc"))
                 (varargs list
                   (defined-symbol #"bar2" 0)
                   (defined-symbol #"bar" 7))
                 (empty)))
             p)))
       (call-with-output-file/void output-file7
         (lambda ([p : OutputPort]) : Void
           (write-all-bytes
             (serialize-elf-library
               (program-section
                 (aligned-bytes
                   (bytes-append
                     (varargs list
                       #"\xFF\x14\x25\x00\x00\x00\x00"
                       #"\xFF\x14\x25\x00\x00\x00\x00"
                       #"\xC3"
                       ))
                   0)
                 (varargs list
                   (relocation (signed-relocation) 3 #"bar")
                   (relocation (signed-relocation) 10 #"foo"))
                 (varargs list
                   (defined-symbol #"foo" 0)
                   (defined-symbol #"bar" 7))
                 (varargs list
                   (defined-symbol #"bar_2" 14))))
             p)))

       0)]
    [_
      (begin
        (write-line #"Wrong number of args" stderr)
        1)]))
