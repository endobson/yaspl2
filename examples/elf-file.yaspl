#:module (elf-file)
#:import {
  (formats elf)
  (io)
  (list)
  (prim)
}
(export)
(types)

(define (main [args : (Array Bytes)] [stdin : InputPort] [stdout : OutputPort] [stderr : OutputPort]) : Int
  (case (array->list args)
    [(cons _ (cons output-file1 (cons output-file2 (empty))))
     (begin
       (call-with-output-file/void output-file1
         (lambda ([p : OutputPort]) : Void
           (write-all-bytes
             (serialize-elf-file
               (elf-file #"" (empty)))
             p)))
       (call-with-output-file/void output-file2
         (lambda ([p : OutputPort]) : Void
           (write-all-bytes
             (serialize-elf-file
               (elf-file
                 #"\xC3\x90\xC3"
                 (varargs list
                   (symbol #"fun1" 0)
                   (symbol #"fun2" 1)
                   )))
             p)))
       0)]
    [_
      (begin
        (write-line #"Wrong number of args" stderr)
        1)]))
