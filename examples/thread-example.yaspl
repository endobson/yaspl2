#:module (thread-example)
#:import {
  (io) {
    #:values
      read-all-bytes
      write-line
  }
  (mach) {
    #:values
      spawn
  }
  (prim) {
    #:types
      Array
      Bytes
      InputPort
      Int
      OutputPort
  }
}
(export
  #:types ()
  #:values ()
  #:patterns ())
(types)


(define (main [args : (Array Bytes)] [stdin : InputPort] [stdout : OutputPort] [stderr : OutputPort]) : Int
  (begin
    (spawn
      (lambda ()
        (write-line #"Other-Thread" stdout)))
    (let ([bytes (read-all-bytes stdin)])
      0)))
