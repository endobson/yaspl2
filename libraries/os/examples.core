#:module (os)

#:declare_external cma0c
#:declare_external cma1c
#:declare_external read_serial
#:declare_external write_serial

#:define_function
a(U64 arg, U64 arg2, U64 arg3, U64 arg4) {
  return arg4 + 7;
}

#:define_function
g(U64 arg, U64 arg2) {
  return arg2;
}

#:define_function
write_bytes(U64 bytes) {
  U64 size := bytes->[1];
  U64 index := 0;
  while (index < size) {
    U64 base := bytes->&[2];
    U64 addr := base + index;
    U64 value := (*addr) & 255;
    U64 res := cma1c(write_serial, value);
    index := index + 1;
  }
  return 0;
}

#:define_function
write_hex_byte(U64 byte) {
  U64 res0 := cma1c(write_serial, nibble_to_hex((byte / 16) & 15));
  U64 res0 := cma1c(write_serial, nibble_to_hex(byte & 15));
  return 0;
}


#:define_function
nibble_to_hex(U64 v) {
  if (v < 10) {
    return 48 + v;
  } else {
    return 87 + v;
  }
}


#:define_function
serialTaskStart(U64 arg, U64 arg2, U64 arg3, U64 arg4) {
  while (1) {
    U64 v := cma0c(read_serial);
    U64 res0 := write_bytes(#"SerialInput: ");
    U64 res1 := write_hex_byte(v);
    U64 res2 := write_bytes(#"\n");
  }
}
