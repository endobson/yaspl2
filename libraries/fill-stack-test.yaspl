#:module (fill-stack-test)
#:import {
  (io)
  (prim)
  (stack-trace)
  (tuples)
}
(export)
(types)

(define (fill-stack-frame-a) : StackSnapshot
  (case (fill-stack-frame-b)
    [(tuple2 ss _)
     ss]))

(define (fill-stack-frame-b) : (Tuple2 StackSnapshot Bytes)
  (tuple2 (make-stack-snapshot) #""))


(define (main [args : (Array Bytes)] [stdin : InputPort] [stdout : OutputPort] [stderr : OutputPort]) : Int
  (match-define ss (fill-stack-frame-a))
  (begin
    (write-line #"call-stack:" stdout)
    (write-all-bytes (stack-snapshot->stack-trace ss) stdout)
    0))
