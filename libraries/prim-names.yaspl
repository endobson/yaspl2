#:module (prim-names)
#:import {
  (list)
  (module-name)
  (prim)
  (top-level-name)
  (yaspl mangle-names)
}
(export
  (#:values
    prim-mod prim-name
    bytes-variant-descriptor-name
    bytes-variant-descriptor-symbol
    trivial-closure-variant-descriptor-name
    trivial-closure-variant-descriptor-symbol))
(types)

(define (prim-mod) : ModName
  (mod-name (varargs list #"prim")))

(define (prim-name [name : Bytes]) : TopLevelName
  (top-level-name (prim-mod) name))

;; Names required by language primitives

(define (bytes-variant-descriptor-name) : TopLevelName
  (prim-name #"bytes_variant_descriptor"))

(define (bytes-variant-descriptor-symbol) : Bytes
  (mangle-top-level-name (bytes-variant-descriptor-name)))

(define (trivial-closure-variant-descriptor-name) : TopLevelName
  (prim-name #"trivial_closure_variant_descriptor"))

(define (trivial-closure-variant-descriptor-symbol) : Bytes
  (mangle-top-level-name (trivial-closure-variant-descriptor-name)))
