#:module (unique-dict)
#:import {
  (data ordering)
  (dict)
  (maybe)
  (prim)
  (set)
}
(export
  (#:types UniqueDict)
  (#:values make-unique-dict unique-dict-add unique-dict-remove unique-dict-reverse-remove
            unique-dict-ref unique-dict-reverse-ref unique-dict-keys unique-dict-reverse-keys)
  (#:patterns))
(types
  (define-type (UniqueDict A B)
    (unique-dict [forward : (Dict A B)] [backward : (Dict B A)])))

(define (A B) (make-unique-dict [cmp-a : (A A -> Ordering)] [cmp-b : (B B -> Ordering)])
  : (UniqueDict A B)
  (unique-dict (make-dict cmp-a) (make-dict cmp-b)))

(define (A B) (unique-dict-add [d : (UniqueDict A B)] [a : A] [b : B]) : (UniqueDict A B)
  (match-define (unique-dict forward backward) d)
  (case (dict-maybe-add forward a b)
    [(nothing) (panic #"UniqueDict key already exists")]
    [(just new-forward)
     (case (dict-maybe-add backward b a)
      [(nothing) (panic #"UniqueDict value already exists")]
      [(just new-backward)
       (unique-dict new-forward new-backward)])]))

(define (A B) (unique-dict-remove [d : (UniqueDict A B)] [a : A]) : (UniqueDict A B)
  (match-define (unique-dict forward backward) d)
  (case (dict-ref forward a)
    [(nothing) d]
    [(just b)
     (unique-dict (dict-remove forward a) (dict-remove backward b))]))

(define (A B) (unique-dict-reverse-remove [d : (UniqueDict A B)] [b : B]) : (UniqueDict A B)
  (match-define (unique-dict forward backward) d)
  (case (dict-ref backward b)
    [(nothing) d]
    [(just a)
     (unique-dict (dict-remove forward a) (dict-remove backward b))]))

(define (A B) (unique-dict-ref [d : (UniqueDict A B)] [a : A]) : (Maybe B)
  (match-define (unique-dict forward _backward) d)
  (dict-ref forward a))

(define (A B) (unique-dict-reverse-ref [d : (UniqueDict A B)] [b : B]) : (Maybe A)
  (match-define (unique-dict _forward backward) d)
  (dict-ref backward b))

(define (A B) (unique-dict-keys [d : (UniqueDict A B)]) : (Set A)
  (match-define (unique-dict forward _backward) d)
  (dict-keys forward))

(define (A B) (unique-dict-reverse-keys [d : (UniqueDict A B)]) : (Set B)
  (match-define (unique-dict _forward backward) d)
  (dict-keys backward))
