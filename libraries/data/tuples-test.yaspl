(module tuples-test
  (import
    (prim
      #:types (Array Bytes InputPort OutputPort Int)
      #:values (=)
      #:patterns ())
    (bytes bytes=?)
    (tuples
      #:types ()
      #:values (tuple2 tuple2=?)
      #:patterns ())
    (yunit
      #:types ()
      #:values (yunit/main new-test-case failure)
      #:patterns ())
    (list list)
    (maybe
      #:types ()
      #:values (just nothing)
      #:patterns ()))
  (export)
  (types)

  (define (main [args : (Array Bytes)] [stdin : InputPort] [stdout : OutputPort] [stderr : OutputPort]) : Int
    (yunit/main stderr
      (varargs list
        (new-test-case #"tuple2 equal (1 #\"a\") (1 #\"a\")"
          (lambda ()
            (if ((tuple2=? = bytes=?) (tuple2 1 #"a") (tuple2 1 #"a"))
                (nothing)
                (just (failure #"Tuples are unequal")))))
        (new-test-case #"tuple2 not equal (1 #\"a\") (1 #\"b\")"
          (lambda ()
            (if ((tuple2=? = bytes=?) (tuple2 1 #"a") (tuple2 1 #"b"))
                (just (failure #"Tuples are equal"))
                (nothing))))
        (new-test-case #"tuple2 not equal (1 #\"a\") (2 #\"a\")"
          (lambda ()
            (if ((tuple2=? = bytes=?) (tuple2 1 #"a") (tuple2 2 #"a"))
                (just (failure #"Tuples are equal"))
                (nothing))))))))
