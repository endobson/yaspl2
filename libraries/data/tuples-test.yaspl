#:module tuples-test
#:import {
  bytes {
    #:values
      bytes=?
  }
  list {
    #:values
      list
  }
  maybe {
    #:values
      just
      nothing
  }
  prim {
    #:types
      Array
      Bytes
      InputPort
      Int
      OutputPort
    #:values
      =
  }
  tuples {
    #:values
      tuple2
      tuple2=?
  }
  yunit {
    #:values
      failure
      new-test-case
      yunit/main
  }
}
(export)
(types)

(define (main [args : (Array Bytes)] [stdin : InputPort] [stdout : OutputPort] [stderr : OutputPort]) : Int
  (yunit/main stderr
    (varargs list
      (new-test-case #"tuple2 equal (1 #\"a\") (1 #\"a\")"
        (lambda ()
          (if ((tuple2=? = bytes=?) (tuple2 1 #"a") (tuple2 1 #"a"))
              (nothing)
              (just (failure #"Tuples are unequal")))))
      (new-test-case #"tuple2 not equal (1 #\"a\") (1 #\"b\")"
        (lambda ()
          (if ((tuple2=? = bytes=?) (tuple2 1 #"a") (tuple2 1 #"b"))
              (just (failure #"Tuples are equal"))
              (nothing))))
      (new-test-case #"tuple2 not equal (1 #\"a\") (2 #\"a\")"
        (lambda ()
          (if ((tuple2=? = bytes=?) (tuple2 1 #"a") (tuple2 2 #"a"))
              (just (failure #"Tuples are equal"))
              (nothing)))))))
