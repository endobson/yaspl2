#:module (maybe-test)
#:import {
  (list)
  (maybe)
  (prim)
  (yunit)
}
(export)
(types)

(define (check-maybe-equal? [m1 : (Maybe Int)] [m2 : (Maybe Int)]) : (-> (Maybe FailedAssertion))
  (lambda ()
    (if ((maybe=? =) m1 m2)
        (nothing)
        (just (failure #"Values are unequal")))))

(define (check-maybe-not-equal? [m1 : (Maybe Int)] [m2 : (Maybe Int)]) : (-> (Maybe FailedAssertion))
  (lambda ()
    (if ((maybe=? =) m1 m2)
        (just (failure #"Values are equal"))
        (nothing))))


(define (main [args : (Array Bytes)] [stdin : InputPort] [stdout : OutputPort] [stderr : OutputPort]) : Int
  (yunit/main stderr
    (varargs list
      (new-test-case #"maybe equal (just 1) (just 1)"
        (check-maybe-equal? (just 1) (just 1)))
      (new-test-case #"maybe equal (just 1) (just 2)"
        (check-maybe-not-equal? (just 1) (just 2)))
      (new-test-case #"maybe equal (nothing) (nothing)"
        (check-maybe-equal? (nothing) (nothing)))
      (new-test-case #"maybe equal (just 1) (nothing)"
        (check-maybe-not-equal? (just 1) (nothing)))
      (new-test-case #"maybe equal (nothing) (just 1)"
        (check-maybe-not-equal? (nothing) (just 1))))))
