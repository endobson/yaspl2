#:module (tuples)
#:import {
  (prim) {
    #:types
      Boolean
  }
}
(export
  #:types (Tuple2 Tuple3)
  #:values (tuple2 tuple3 tuple2=?)
  #:patterns (tuple2 tuple3))
(types
  (define-type (Tuple2 a b)
    (tuple2 [a : a] [b : b]))
  (define-type (Tuple3 a b c)
    (tuple3 [a : a] [b : b] [c : c])))

(define (A B) (tuple2=? [a=? : (A A -> Boolean)] [b=? : (B B -> Boolean)])
  : ((Tuple2 A B) (Tuple2 A B) -> Boolean)
  (lambda ([v1 : (Tuple2 A B)] [v2 : (Tuple2 A B)])
    (case (tuple2 v1 v2)
      [(tuple2 (tuple2 a1 b1) (tuple2 a2 b2))
       (if (a=? a1 a2)
           (b=? b1 b2)
           #f)])))
