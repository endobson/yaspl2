#:module (data comparable-test)
#:import {
  (bytes)
  (list)
  (maybe)
  (prim)
  (yunit)
}
(export
  (#:values main))
(types
  (define-type-class (Comparable a)
    [compare : (a a -> Ordering)])
  )

(define-type-class-instance (Comparable Bytes)
  [compare bytes-cmp])


(define [a #:constraints (Comparable a)]
  (comp-sort [l : (List a)]) : (List a)
  l)

(define (test1) : (Maybe FailedAssertion)
  (match-define _x comp-sort)
  (match-define _y bytes-cmp)
  (nothing))

(define (main [args : Bytes] [stdin : InputPort] [stdout : OutputPort] [stderr : OutputPort]) : Int
  (yunit/main stderr
    (varargs list
      (test-case #"test1" test1))))
