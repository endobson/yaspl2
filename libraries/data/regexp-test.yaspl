#:module (regexp-test)
#:import {
  (list)
  (maybe)
  (prim)
  (regexp)
  (yunit)
}
(export
  (#:values main))
(types)

(define (regexp-a) : Regexp
  (lit-regexp (u8 97)))

(define (regexp-b) : Regexp
  (lit-regexp (u8 98)))

(define (regexp-dash) : Regexp
  (lit-regexp (u8 45)))

(define (check-match [regexp : Regexp] [bytes : Bytes]) : (-> (Maybe FailedAssertion))
  (lambda ()
    (if (regexp-match? regexp bytes)
        (nothing)
        (just (failure #"Failed to match")))))

(define (check-no-match [regexp : Regexp] [bytes : Bytes]) : (-> (Maybe FailedAssertion))
  (lambda ()
    (if (regexp-match? regexp bytes)
        (just (failure #"Unexpectedly matched"))
        (nothing))))

(define (main [args : Bytes] [stdin : InputPort] [stdout : OutputPort] [stderr : OutputPort]) : Int
  (yunit/main stderr
    (varargs list
      (test-case #"epsilon empty"
        (check-match (epsilon-regexp) #""))
      (test-case #"empty empty"
        (check-no-match (empty-regexp) #""))
      (test-case #"epsilon non-empty"
        (check-no-match (epsilon-regexp) #"a"))
      (test-case #"empty non-empty"
        (check-no-match (empty-regexp) #"a"))
      (test-case #"lit empty"
        (check-no-match (regexp-a) #""))
      (test-case #"lit nonmatching"
        (check-no-match (regexp-a) #"-"))
      (test-case #"lit matching"
        (check-match (regexp-a) #"a"))
      (test-case #"any empty"
        (check-no-match (any-regexp) #""))
      (test-case #"any non-empty"
        (check-match (any-regexp) #"-"))
      (test-case #"group empty"
        (check-no-match (group-regexp (any-regexp)) #""))
      (test-case #"group non-empty"
        (check-match (group-regexp (any-regexp)) #"-"))
      (test-case #"alt empty"
        (check-no-match (alt-regexp (regexp-a) (regexp-b)) #""))
      (test-case #"alt nonmatching"
        (check-no-match (alt-regexp (regexp-a) (regexp-b)) #"c"))
      (test-case #"alt match left"
        (check-match (alt-regexp (regexp-a) (regexp-b)) #"a"))
      (test-case #"alt match right"
        (check-match (alt-regexp (regexp-a) (regexp-b)) #"b"))
      (test-case #"rep empty"
        (check-match (rep-regexp (regexp-dash)) #""))
      (test-case #"rep single"
        (check-match (rep-regexp (regexp-dash)) #"-"))
      (test-case #"rep double"
        (check-match (rep-regexp (regexp-dash)) #"--"))
      (test-case #"rep nonmatching"
        (check-no-match (rep-regexp (regexp-dash)) #"+"))
      (test-case #"digit regexp match"
        (check-match (digit-regexp) #"5"))
      (test-case #"digit regexp nonmatching"
        (check-no-match (digit-regexp) #"A")))))
