(module types
  (import
    (prim
      #:types (Bytes)
      #:values ()
      #:patterns ())
    (list
      #:types (List)
      #:values ()
      #:patterns ()))
  (export
    #:types (Type)
    #:values (abstract-type var-type fun-type)
    #:patterns ())
  (types
    (define-type Kind
      (star-kind)
      (fun-kind [args (List Kind)] [result Kind]))
    (define-type Type
      (fun-type [type-vars (List Bytes)] [args (List Type)] [result Type])
      (var-type [v Bytes])
      (abstract-type [module-name Bytes] [name Bytes] [args (List Type)]))))
