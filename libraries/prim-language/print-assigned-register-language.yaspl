#:module (print-assigned-register-language)
#:import {
  (assigned-register-language)
  (block-number)
  (bytes)
  (dict)
  (join-list)
  (list)
  (numbers)
  (prim)
  {(print-lowered-register-language)
    {#:values
      print-block-map
    }
  }
  (yaspl math-operations)
}
(export
  (#:values print-function))
(types)


(define [Reg] (print-function [f : (FunctionDefinition Reg)]
                              [print-reg : (Reg -> Bytes)]) : Bytes
  (case f
    [(function-definition name blocks)
     (bytes-append
       (jl->list
         (append-jl
           (varargs join-list name #"\n")
           (print-block-map blocks print-reg))))]))
