(module factorial
  (define (f x)
    (return (* (+ x x) x)))

  (define (g x y)
    (def a x)
    (if (= y x)
        (then
          (set! a (+ y y)))
        (else))
    (def z (+ y x))
    (return (* (+ z x) x)))

  (define (h x y)
    (def a x)
    (def b y)
    (set! b (+ x x))
    (if (= a b)
        (then
          (set! a y))
        (else))
    (return a))

  (define (i x y)
    (def a x)
    (def b y)
    (while (< a b)
      (def c (- b a))
      (set! b a)
      (set! a c))
    (return a))

  )
