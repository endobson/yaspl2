#:module (block-number)
#:import {
  (data ordering)
  (numbers)
  (prim)
}
(export
  (#:types BlockNumber)
  (#:values next-block-number block-number-cmp initial-block-number block-number=?
            block-number->bytes))

(types
  (define-type BlockNumber
    (block-number [v : Int])))

(define (initial-block-number) : BlockNumber
  (block-number 0))

(define (next-block-number [b : BlockNumber]) : BlockNumber
  (match-define (block-number v) b)
  (block-number (+ 1 v)))

(define (block-number-cmp [b1 : BlockNumber] [b2 : BlockNumber]) : Ordering
  (int-cmp (block-number-v b1) (block-number-v b2)))

(define (block-number=? [b1 : BlockNumber] [b2 : BlockNumber]) : Boolean
  (= (block-number-v b1) (block-number-v b2)))

(define (block-number->bytes [b : BlockNumber]) : Bytes
  (integer->decimal-bytes (block-number-v b)))
