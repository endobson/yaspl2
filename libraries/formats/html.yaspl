#:module (formats html)
#:import {
  (formats xml)
  (join-list)
  (list)
  (prim)
}
(export
  #:types ()
  #:values (html head body pre pre* code div link title h1 h2)
  #:patterns ())
(types)

(define (html [head : Node] [body : Node]) : Node
  (element-node
    #"html"
    (cons (attribute/escape #"xmlns" (single-jl #"http://www.w3.org/1999/xhtml")) (empty))
    (cons head (cons body (empty)))))
(define (head [children : (List Node)]) : Node
  (element-node #"head" (empty) children))
(define (body [children : (List Node)]) : Node
  (element-node #"body" (empty) children))


(define (title [text : (JoinList Bytes)]) : Node
  (element-node #"title" (empty) (cons (text-node/escape text) (empty))))

(define (h1 [child : Node]) : Node
  (element-node #"h1" (empty) (cons child (empty))))
(define (h2 [child : Node]) : Node
  (element-node #"h2" (empty) (cons child (empty))))

(define (pre [child : Node]) : Node
  (element-node #"pre" (empty) (cons child (empty))))
(define (pre* [attributes : (List Attribute)] [child : Node]) : Node
  (element-node #"pre" attributes (cons child (empty))))
(define (code [child : Node]) : Node
  (element-node #"code" (empty) (cons child (empty))))
(define (div [child : Node]) : Node
  (element-node #"div" (empty) (cons child (empty))))
(define (link [uri : (JoinList Bytes)] [contents : Node]) : Node
  (element-node #"a"
    (cons (attribute/escape #"href" uri) (empty))
    (cons contents (empty))))
