#:module (linker-main)
#:import {
  (bytes)
  (io)
  (linker)
  (list)
  (machine-code-writer)
  (maybe)
  (prim)
}
(export
  (#:values main))
(types)

(define (run [args : Bytes]) : (Maybe Bytes)
  (case (args->list args)
    [(empty)
     (just #"No executable specified???")]
    [(cons _ (empty))
     (just #"No platform name supplied.")]
    [(cons _ (cons _ (empty)))
     (just #"No output executable file name supplied.")]
    [(cons _ (cons abi (cons output-file-name object-files)))
     (case (parse-system-abi abi)
       [(nothing) (just #"Unknown abi")]
       [(just abi)
        (link-files object-files abi output-file-name)])]))

(define (main [args : Bytes] [stdin : InputPort] [stdout : OutputPort] [stderr : OutputPort]) : Int
  (case (run args)
    [(just v)
     (begin
       (write-all-bytes v stderr)
       (newline stderr)
       1)]
    [(nothing)
     0]))
