(module ip
  (import
    (bytes bytes-append)
    (list
      #:types ()
      #:values (list)
      #:patterns (cons empty))
    (maybe
      #:types (Maybe)
      #:values (just nothing)
      #:patterns (just nothing))
    (numbers integer->decimal-bytes decimal-bytes->integer)
    (prim
      #:types (Bytes U8)
      #:values (panic u8 u8->s64)
      #:patterns ())
    (regexp
      #:types (Regexp)
      #:values (alt-regexp digit-regexp epsilon-regexp group-regexp lit-regexp regexp-match seq-regexp)
      #:patterns ()))
  (export
    #:types (Ipv4Address)
    #:values (ipv4-address ipv4-address-octet1 ipv4-address-octet2 ipv4-address-octet3 ipv4-address-octet4
              ipv4-address->bytes bytes->ipv4-address)
    #:patterns ())
  (types
    (define-type Ipv4Address
      (ipv4-address [octet1 : U8] [octet2 : U8] [octet3 : U8] [octet4 : U8])))

  (define (ipv4-address->bytes [addr : Ipv4Address]) : Bytes
    (bytes-append
      (varargs list
        (integer->decimal-bytes (u8->s64 (ipv4-address-octet1 addr)))
        #"."
        (integer->decimal-bytes (u8->s64 (ipv4-address-octet2 addr)))
        #"."
        (integer->decimal-bytes (u8->s64 (ipv4-address-octet3 addr)))
        #"."
        (integer->decimal-bytes (u8->s64 (ipv4-address-octet4 addr))))))

  (define (octet-regexp) : Regexp
    (seq-regexp
      (digit-regexp)
      (alt-regexp
        (epsilon-regexp)
        (seq-regexp
          (digit-regexp)
          (alt-regexp
            (epsilon-regexp)
            (digit-regexp))))))

  (define (dot-regexp) : Regexp
    (lit-regexp (u8 46)))

  (define (ip-regexp) : Regexp
    (seq-regexp
      (group-regexp (octet-regexp))
      (seq-regexp
        (dot-regexp)
        (seq-regexp
          (group-regexp (octet-regexp))
          (seq-regexp
            (dot-regexp)
            (seq-regexp
              (group-regexp (octet-regexp))
              (seq-regexp
                (dot-regexp)
                (group-regexp (octet-regexp)))))))))

  (define (bytes->ipv4-address [bytes : Bytes]) : (Maybe Ipv4Address)
    (case (regexp-match (ip-regexp) bytes)
      [(nothing) (nothing)]
      [(just (cons _ (cons octet1 (cons octet2 (cons octet3 (cons octet4 (empty)))))))
       (just
         (ipv4-address
           (u8 (decimal-bytes->integer octet1))
           (u8 (decimal-bytes->integer octet2))
           (u8 (decimal-bytes->integer octet3))
           (u8 (decimal-bytes->integer octet4))))]
      [(just _)
       (panic #"bytes->ipv4-address wrong number of matches")])))
