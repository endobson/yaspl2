#:module (resolved-imports-language-test)
#:import {
  (bytes)
  (data indexed-set)
  (dict)
  (either)
  (list)
  (maybe)
  (module-name)
  (module-signature)
  (prim)
  (resolved-imports-language)
  {(source-language)
    {#:values
      full-imports
    }
  }
  (top-level-name)
  (variant-info)
  (yunit)
}
(export
  (#:values main))
(types)


(define (main [args : Bytes] [stdin : InputPort] [stdout : OutputPort] [stderr : OutputPort]): Int
  (yunit/main stderr
    (varargs list
      (new-test-case #"Patterns are resolved in imports"
        (lambda ()
          (case (resolve-imports/importss
                  (cons (full-imports (mod-name (varargs list #"maybe"))) (empty))
                  (indexed-set-add
                    (make-indexed-set module-signature-name mod-name-cmp)
                    (module-signature
                      (mod-name (varargs list #"maybe"))
                      (make-dict bytes-cmp)
                      (dict-add
                        (dict-add
                          (make-dict bytes-cmp)
                          #"just"
                          (pattern-signature
                            (variant-destruction-info #"just" (u8 0) (varargs list #"just" #"nothing"))
                            (mod-name (varargs list #"maybe")) #"Maybe"
                            (empty) (empty)))
                        #"nothing"
                        (pattern-signature
                          (variant-destruction-info #"nothing" (u8 1) (varargs list #"just" #"nothing"))
                          (mod-name (varargs list #"maybe")) #"Maybe"
                          (empty) (empty)))
                      (make-dict bytes-cmp)
                      (make-dict bytes-cmp)
                      (make-dict top-level-name-cmp))))
            [(left _)
             (just (failure #"failed"))]
            [(right (imports _ _ patterns _ _))
             (case (dict-ref patterns #"just")
               [(nothing)
                (just (failure #"No import of just"))]
               [(just _)
                (nothing)])
             ]))))))
