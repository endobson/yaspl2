#:module (main-stub-main)
#:import {
  (assembler)
  (data source-location)
  (either)
  (io)
  (list)
  (mach-o-writer)
  (maybe)
  (module-name)
  (prim)
  (prim-implementation)
  (sexp-parser)
  (top-level-name)
  (x86-64-runtime)
  (yaspl top-level-object-optimizer)
  (yaspl top-level-objects-to-x86-64)
  (yaspl x86-64-assembly)
}
(export
  (#:types)
  (#:values main)
  (#:patterns))
(types)

(define (append-fragments [f1 : AssemblyFragments] [f2 : AssemblyFragments]) : AssemblyFragments
  (match-define (assembly-fragments text1 const1) f1)
  (match-define (assembly-fragments text2 const2) f2)
  (assembly-fragments (append text1 text2) (append const1 const2)))

(define (main [args : (Array Bytes)] [stdin : InputPort] [stdout : OutputPort] [stderr : OutputPort]) : Int
  (if (< (array-length args) 2)
      (begin
        (write-line #"No output file name supplied" stderr)
        1)
      (if (< (array-length args) 3)
          (begin
            (write-line #"No module name supplied" stderr)
            1)
          (case (parse-single-sexp (sourced-bytes (unnamed-source) (array-ref args 2)))
            [(left v)
             (begin
               (write-line #"Unparseable module name sexp" stderr)
               1)]
            [(right v)
             (case (sexp->mod-name v)
               [(nothing)
                (begin
                  (write-line #"Unparseable module name" stderr)
                  1)]
               [(just mod-name)
                (case (append-fragments
                        (yaspl-runtime (top-level-name mod-name #"main") (osx-abi))
                        (convert-objects (optimize-tlos (prim-implementation))))
                  [(assembly-fragments text-fragments const-fragments)
                   (match-define text-section (assemble-text-section text-fragments))
                   (match-define const-section (assemble-const-section const-fragments))
                   (begin
                     (write-mach-o-library text-section const-section (array-ref args 1))
                     0)])])]))))
