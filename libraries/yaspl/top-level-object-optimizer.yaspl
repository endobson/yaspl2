#:module (yaspl top-level-object-optimizer)
#:import {
  (dict)
  (list)
  (prim)
  (simplify-register-language)
  (stack-machine-optimizer)
  (yaspl top-level-objects)
}
(export
  #:types ()
  #:values (optimize-tlos)
  #:patterns ())
(types)


(define (optimize-tlos [tlos : (List TopLevelObject)] [known-funcs : (Dict Bytes Bytes)]) : (List TopLevelObject)
    (map (lambda ([tlo : TopLevelObject]) (optimize-tlo known-funcs tlo)) tlos))


(define (optimize-tlo [known-funcs : (Dict Bytes Bytes)] [tlo : TopLevelObject]) : TopLevelObject
  (case tlo
    [(register-function-tlo func)
     (register-function-tlo (simplify-function-definition func known-funcs))]
    [(stack-function-tlo func)
     (stack-function-tlo (optimize-stack-function known-funcs func))]
    [(bytes-tlo _ _) tlo]
    [(trivial-variant-tlo _ _) tlo]
    [(trivial-closure-tlo _ _) tlo]))
