#:module (yaspl top-level-object-optimizer)
#:import {
  (bytes)
  (dict)
  (list)
  (maybe)
  (prim)
  (simplify-register-language)
  (tuples)
  (yaspl top-level-objects)
}
(export
  (#:values optimize-tlos))
(types)


(define (optimize-tlos [tlos : (List TopLevelObject)]) : (List TopLevelObject)
  (match-define static-info (make-register-static-info tlos))
  (map (lambda ([tlo : TopLevelObject]) (optimize-tlo tlo static-info)) tlos))

(define (optimize-tlo [tlo : TopLevelObject] [static-info : StaticInfo]) : TopLevelObject
  (case tlo
    [(register-function-tlo func)
     (register-function-tlo (simplify-function-definition func static-info))]
    [(bytes-tlo _ _) tlo]
    [(variant-descriptor-tlo _ _ _ _) tlo]
    [(trivial-variant-tlo _ _ _) tlo]
    [(trivial-closure-tlo _ _) tlo]))

(define (make-register-static-info [tlos : (List TopLevelObject)]) : StaticInfo
  (static-info
    (dict-add-all
      (make-dict bytes-cmp)
      (filter-map
        (lambda ([tlo : TopLevelObject]) : (Maybe (Tuple2 Bytes Bytes))
          (case tlo
            [(bytes-tlo symbol val)
             (just (tuple2 symbol val))]
            [(register-function-tlo _)
             (nothing)]
            [(variant-descriptor-tlo _ _ _ _)
             (nothing)]
            [(trivial-variant-tlo _ _ _)
             (nothing)]
            [(trivial-closure-tlo _ _)
             (nothing)]))
        tlos))))
