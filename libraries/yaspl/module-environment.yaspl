#:module (yaspl module-environment)
#:import {
  (bytes)
  (dict)
  (intermediate-language)
  (list)
  (maybe)
  (module-signature)
  (prim)
}
(export
  #:types (ModuleEnvironment)
  #:values (module-environment-tag-ref make-module-environment)
  #:patterns ())
(types
  (define-type ModuleEnvironment
    (module-environment
      [variant-bindings : (Dict Bytes VariantInfo)]))
  (define-type VariantInfo
    (variant-info [tag : Int])))

(define (module-environment-tag-ref [env : ModuleEnvironment] [name : Bytes]) : (Maybe Int)
  (case (dict-ref (module-environment-variant-bindings env) name)
    [(nothing) (nothing)]
    [(just tag) (just (variant-info-tag tag))]))


(define (make-module-environment [imod : Module]) : ModuleEnvironment
  (module-environment
    (add-all-imported-patterns
      (add-type-definitions-variant-infos/top
        (make-dict bytes-cmp) imod)
      imod)))

(define (add-all-imported-patterns [env : (Dict Bytes VariantInfo)] [imod : Module])
  : (Dict Bytes VariantInfo)
  (match-define (imports _ patterns _) (module-imports imod))
  (merge-dicts
    (dict-value-map
      patterns
      (lambda ([p : PatternSignature])
        (case p
          [(pattern-signature _ tag _ _ _ _)
           (variant-info tag)])))
    env))

(define (add-type-definitions-variant-infos/top [env : (Dict Bytes VariantInfo)] [imod : Module])
  : (Dict Bytes VariantInfo)
  (add-type-definitions-variant-infos env (module-types imod)))

(define (add-type-definitions-variant-infos
          [env : (Dict Bytes VariantInfo)]
          [defs : (List TypeDefinition)])
  : (Dict Bytes VariantInfo)
  (case defs
    [(empty) env]
    [(cons (type-definition _ _ _ _ variants) defs)
     (add-type-definitions-variant-infos
       (add-variant-definitions-variant-infos env variants)
       defs)]))

(define (add-variant-definitions-variant-infos
          [env : (Dict Bytes VariantInfo)]
          [defs : (List VariantDefinition)])
  : (Dict Bytes VariantInfo)
  (case defs
    [(empty) env]
    [(cons (variant-definition name tag _) defs)
     (add-variant-definitions-variant-infos
       (dict-add env name (variant-info tag))
       defs)]))
