#:module (yaspl runtime fill_stack)

#:define_function
U64 fill_stack(Bytes out_bytes, Bytes out_metadata,
               U64 initial_base_pointer) {
   U64[]* out_array_raw := as<U64[]*>(out_bytes);
   U64[]* out_metadata_raw := as<U64[]*>(out_metadata);
   U64 arr_size := out_array_raw->[1];
   U64 last_base_pointer := initial_base_pointer;
   U64 next_base_pointer := initial_base_pointer;
   while (next_base_pointer != 0) {
     last_base_pointer := next_base_pointer;
     next_base_pointer := *next_base_pointer;
   }
   U64 stack_size := 1 + (as<U64>(last_base_pointer) - as<U64>(initial_base_pointer)) / 8;
   U64 index := 0;
   while ((index < arr_size) && (index < stack_size)) {
     *out_array_raw->&[index+2] <- initial_base_pointer->[index];
     index := index + 1;
   }
   *out_metadata_raw->&[2] <- as<U64>(initial_base_pointer);
   return index;
}
