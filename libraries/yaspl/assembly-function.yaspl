#:module (yaspl assembly-function)
#:import {
  (bytes)
  (join-list)
  (list)
  (prim)
  (prim-names)
  (tuples)
  (yaspl x86-64-assembly)
}
(export
  (#:values prim-assembly-function prim-assembly-function/panic))
(types)


(define (prim-assembly-function
          [name : Bytes]
          [instructions : (JoinList Instruction)]) : (Tuple2 TextFragment ConstFragment)
  (prim-assembly-function* name instructions #f))
(define (prim-assembly-function/panic
          [name : Bytes]
          [instructions : (JoinList Instruction)]) : (Tuple2 TextFragment ConstFragment)
  (prim-assembly-function* name instructions #t))

(define (prim-assembly-function*
          [name : Bytes]
          [instructions : (JoinList Instruction)]
          [panic : Boolean]) : (Tuple2 TextFragment ConstFragment)
  (tuple2
    (function-fragment (bytes-append (varargs list #"yprim_" name))
      (varargs append-jl*
        (named-block
          (bytes-append (varargs list #"yprim_" name #"_0"))
          instructions)
        (if panic
            (named-block
              (bytes-append (varargs list #"yprim_" name #"_panic"))
              (varargs join-list (ud2)))
            (empty-jl))))
    (closure-fragment
      (bytes-append (varargs list #"yprim_" name #"_closure"))
      (trivial-closure-variant-descriptor-symbol)
      (bytes-append (varargs list #"yprim_" name)))))
