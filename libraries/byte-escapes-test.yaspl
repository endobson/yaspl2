(module byte-escapes-test
  (import
    (byte-escapes unescape-bytes escape-bytes)
    (bytes bytes=?)
    (either
      #:types ()
      #:values ()
      #:patterns (left right))
    (list list)
    (prim
      #:types (Array Boolean Bytes InputPort Int OutputPort)
      #:values ()
      #:patterns ())
    (yunit
      #:types ()
      #:values (test-case yunit/main)
      #:patterns ()))
  (export)
  (types)

  (define (test-unescape-no-escapes) : Boolean
    (case (unescape-bytes #"abc")
      [(left _) #f]
      [(right v) (bytes=? v #"abc")]))

  (define (test-unescape-backslash) : Boolean
    (case (unescape-bytes #"\\\\")
      [(left _) #f]
      [(right v) (bytes=? v #"\\")]))

  (define (test-escape-no-escapes) : Boolean
    (bytes=? (escape-bytes #"abc") #"abc"))

  (define (test-escape-backslash) : Boolean
    (bytes=? (escape-bytes #"\\") #"\\\\"))


  (define (main [args : (Array Bytes)] [stdin : InputPort] [stdout : OutputPort] [stderr : OutputPort]): Int
    (yunit/main stderr
      (varargs list
        (test-case #"unescape: no-escapes" test-unescape-no-escapes)
        (test-case #"unescape: backslash" test-unescape-backslash)
        (test-case #"escape: no-escapes" test-escape-no-escapes)
        (test-case #"escape: backslash" test-escape-backslash)))))
