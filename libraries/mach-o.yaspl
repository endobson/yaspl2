(module mach-o
  (import
    (prim
      #:types (Bytes Byte InputPort OutputPort Array)
      #:values (< = array-length array-ref open-input-file read-bytes make-bytes
                panic void bytes-ref)
      #:patterns ())
    (io write-line write-all-bytes)
    (numbers integer->hex-bytes integer->decimal-bytes)
    (bytes bytes-ref/quad-le make-null-terminated))
  (export)
  (types)

  (define (main [args : (Array Bytes)] [stdin : InputPort] [stdout : OutputPort] [stderr : OutputPort]) : Byte
    (if (< (array-length args) 2)
        (begin
          (write-line #"No input file name supplied" stderr)
          1)
        (let ([input (open-input-file (make-null-terminated (array-ref args 1)))])
          (let ([header (make-bytes 32)])
            (begin
              (if (= 32 (read-bytes header input 0 32))
                  (void)
                  (panic #"Not enough bytes"))
              (write-all-bytes #"magic:\n  0x" stdout)
              (write-line (integer->hex-bytes (bytes-ref/quad-le header 0)) stdout)
              (write-all-bytes #"cpu-type:\n  0x" stdout)
              (write-line (integer->hex-bytes (bytes-ref/quad-le header 4)) stdout)
              (write-all-bytes #"cpu-subtype:\n  0x" stdout)
              (write-line (integer->hex-bytes (bytes-ref/quad-le header 8)) stdout)
              (write-all-bytes #"filetype:\n  0x" stdout)
              (write-line (integer->hex-bytes (bytes-ref/quad-le header 12)) stdout)
              (write-all-bytes #"number of commands:\n  0x" stdout)
              (write-line (integer->hex-bytes (bytes-ref/quad-le header 16)) stdout)
              (write-all-bytes #"size of commands:\n  0x" stdout)
              (write-line (integer->hex-bytes (bytes-ref/quad-le header 20)) stdout)
              (write-all-bytes #"flags:\n  0x" stdout)
              (write-line (integer->hex-bytes (bytes-ref/quad-le header 24)) stdout)
              (write-all-bytes #"reserved:\n  0x" stdout)
              (write-line (integer->hex-bytes (bytes-ref/quad-le header 28)) stdout)
              0))))))
