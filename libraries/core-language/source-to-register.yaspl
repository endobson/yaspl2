#:module (core-language source-to-register)
#:import {
  (bytes)
  (core-language source-language)
  (dict)
  (list)
  (module-name)
  (module-signature)
  (prim)
  (top-level-name)
  (yaspl top-level-objects)
}
(export
  (#:types)
  (#:values
     module-to-top-level-objects
     module->module-signature)
  (#:patterns))
(types)


(define (module-to-top-level-objects [mod : Module]) : (List TopLevelObject)
  (empty))

(define (module->module-signature [mod : Module]) : ModuleSignature
  (module-signature
    (mod-name (varargs list #"name"))
    (make-dict bytes-cmp)
    (make-dict bytes-cmp)
    (make-dict bytes-cmp)
    (make-dict bytes-cmp)
    (make-dict top-level-name-cmp)))
