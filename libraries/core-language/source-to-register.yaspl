#:module (core-language source-to-register)
#:import {
  {(core-language conversions lower-to-register)
    {#:values
      [module->module-signature l:module->module-signature]
      [module-to-top-level-objects l:module-to-top-level-objects]
    }
  }
  (core-language conversions resolve-imports)
  (core-language source-language)
  (list)
  (module-signature)
  (prim)
  (yaspl top-level-objects)
}
(export
  (#:types)
  (#:values
     module-to-top-level-objects
     module->module-signature)
  (#:patterns))
(types)

(define (module-to-top-level-objects [mod : Module]) : (List TopLevelObject)
  (match-define resolved-imports (resolve-imports mod))
  (match-define tlos (l:module-to-top-level-objects resolved-imports))
  tlos)

(define (module->module-signature [mod : Module]) : ModuleSignature
  (match-define resolved-imports (resolve-imports mod))
  (match-define sig (l:module->module-signature resolved-imports))
  sig)
