#:module (core-language source-language)
#:import {
  (list)
  (module-name)
  (prim)
}
(export
  (#:types Module Definition Parameter Statement Expression)
  (#:values module function-definition parameter
            return-statement
            var-expr)
  (#:patterns module function-definition parameter
              return-statement
              var-expr))
(types
  (define-type Module
    (module [name : ModName]
            [definitions : (List Definition)]))

  (define-type Definition
    (function-definition
      [name : Bytes]
      [parameters : (List Parameter)]
      [statements : (List Statement)]))

  (define-type Parameter
    (parameter [name : Bytes]))

  (define-type Statement
    (return-statement [e : Expression]))

  (define-type Expression
    (var-expr [var : Bytes])))
