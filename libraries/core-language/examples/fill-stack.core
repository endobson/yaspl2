#:module (yaspl runtime fill_stack)

#:define_function
fill_stack_inner(U64[]* out_array_raw, U64[]* out_metadata_raw,
                 U64 initial_base_pointer) {
   int64 arr_size := out_array_raw->[1];
   U64 last_base_pointer := initial_base_pointer;
   U64 next_base_pointer := initial_base_pointer;
   while (next_base_pointer != 0) {
     last_base_pointer := next_base_pointer;
     next_base_pointer := *next_base_pointer;
   }
   int64 stack_size := 1 + (as<int64>(last_base_pointer) - as<int64>(initial_base_pointer)) / 8;
   int64 index := 0;
   while ((index < arr_size) && (index < stack_size)) {
     *out_array_raw->&[index+2] <- initial_base_pointer->[index];
     index := index + 1;
   }
   *out_metadata_raw->&[2] <- as<int64>(initial_base_pointer);
   return index;
}
