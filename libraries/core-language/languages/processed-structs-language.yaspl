#:module (core-language languages processed-structs-language)
#:import {
  {(core-language languages resolved-types-language)
    {#:types
      Expression
      FunctionDefinition
      Import
      Parameter
      Statement
    }
    {#:values
      array-index-expr
      assignment-statement
      bin-op-expr
      bytes-expr
      call-expr
      cast-expr
      define-local-variable-statement
      deref-expr
      effect-statement
      function-definition
      function-definition-name
      if-statement
      import-external
      import-external-type
      int-expr
      parameter
      parameter-name
      parameter-type
      pointer-assignment-statement
      return-statement
      struct-field-expr
      unary-op-expr
      var-expr
      while-statement
    }
    {#:patterns
      array-index-expr
      assignment-statement
      bin-op-expr
      bytes-expr
      call-expr
      cast-expr
      define-local-variable-statement
      deref-expr
      effect-statement
      function-definition
      if-statement
      import-external
      int-expr
      parameter
      pointer-assignment-statement
      return-statement
      struct-field-expr
      unary-op-expr
      var-expr
      while-statement
    }
  }
  (core-language struct-info)
  (dict)
  (list)
  (module-name)
  (prim)
  (types)
}
(export
  (#:types Module FunctionDefinition Parameter Statement Expression
           Import GlobalInfo)
  (#:values module function-definition parameter global-info
            return-statement if-statement while-statement
            define-local-variable-statement assignment-statement
            pointer-assignment-statement effect-statement
            var-expr int-expr unary-op-expr bin-op-expr cast-expr
            deref-expr array-index-expr struct-field-expr call-expr bytes-expr
            parameter-name parameter-type import-external
            function-definition-name import-external-type)
  (#:patterns module function-definition import-external
              parameter global-info
              return-statement if-statement while-statement
              define-local-variable-statement assignment-statement
              pointer-assignment-statement effect-statement
              var-expr int-expr unary-op-expr bin-op-expr cast-expr bytes-expr
              deref-expr array-index-expr struct-field-expr call-expr))
(types
  (define-type Module
    (module
      [name : ModName]
      [imports : (Dict Bytes Import)]
      [structs : (Dict Type StructInfo)]
      [globals : (Dict Bytes GlobalInfo)]
      [function : (List FunctionDefinition)]))

  (define-type GlobalInfo
    (global-info
      [type : Type]
      [size : Int])))
