#:module (large-function-test)
#:import {
  (list)
  (prim)
  (yunit)
}
(export
  (#:values main))
(types
  (define-type Z
    (z [a : Int] [b : Int] [c : Int] [d : Int] [e : Int] [f : Int] [g : Int] [h : Int])))


(define (eighth [a : Int] [b : Int] [c : Int] [d : Int] [e : Int] [f : Int] [g : Int]
                [h : Int]) : Int
   h)



(define (main [args : Bytes] [stdin : InputPort] [stdout : OutputPort] [stderr : OutputPort]) : Int
  (yunit/main stderr
    (varargs list
      (new-test-case #"8th regular"
        (lambda () (expect-equal/int (eighth 0 1 2 3 4 5 6 (+ 3 4)) 7)))
      (new-test-case #"8th constructor"
        (lambda () (expect-equal/int (z-h (z 0 1 2 3 4 5 6 (+ 3 4))) 7))))))
