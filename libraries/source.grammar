MODULE = #:module MODULE_NAME #:import IMPORTS EXPORTS TYPE_DEFINITIONS DEFINITION ...
MODULE_NAME = (SYMBOL ...)

IMPORTS = {IMPORT ...}
IMPORT FULL = MODULE_NAME
IMPORT RESTRICTED = {MODULE_NAME IMPORT_RESTRICTION ...}
IMPORT_RESTRICTION = {IMPORT_KIND IMPORT_ITEM ...}
IMPORT_KIND TYPES = #:types
IMPORT_KIND VALUES = #:values
IMPORT_KIND PATTERNS = #:patterns
IMPORT_ITEM BASE = SYMBOL
IMPORT_ITEM RENAMED = [SYMBOL SYMBOL]

EXPORTS = (export EXPORT_SECTION ...)
EXPORT_SECTION = (EXPORT_KIND SYMBOLS ...)
EXPORT_KIND TYPES = #:types
EXPORT_KIND VALUES = #:values
EXPORT_KIND PATTERNS = #:patterns

TYPE_DEFINITIONS = (types TYPE_DEFINITION ...)
TYPE_DEFINITION = (define-type TYPE_NAME VARIANT_DEFINITION ...)
TYPE_NAME POLY = (SYMBOL SYMBOL ...)
TYPE_NAME MONO = SYMBOL
VARIANT_DEFINITION = (SYMBOL FIELD_DEFINITION ...)
FIELD_DEFINITION = [SYMBOL : TYPE]

TYPE NAME = SYMBOL
TYPE APP = (SYMBOL TYPE ...)

DEFINITION POLY = (define (SYMBOL ...) (SYMBOL ARG ...) : TYPE BLOCK)
DEFINITION MONO = (define (SYMBOL ARG ...) : TYPE BLOCK)

BLOCK = BLOCK_DEFINITION ... EXPR

BLOCK_DEFINITION = (match-define PATTERN EXPR)

PATTERN SYM = SYMBOL
PATTERN BYTES = BYTES
PATTERN NUMBER = NUMBER
PATTERN ABSTRACTION = (SYMBOL PATTERN ...)

EXPR = SEXP
