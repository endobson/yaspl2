MODULE = #:module MODULE_NAME #:import IMPORTS EXPORTS TYPE_DEFINITIONS DEFINITION ...
MODULE_NAME = (SYMBOL ...)
IMPORTS = {IMPORT ...}
IMPORT = MODULE_NAME IMPORT_RESTRICTIONS ?
IMPORT_RESTRICTIONS = { TYPE_RESTRICTIONS ? VALUE_RESTRICTIONS ? PATTERN_RESTRICTIONS ? }
TYPE_RESTRICTIONS = #:types RENAMED_IMPORTS
VALUE_RESTRICTIONS = #:values RENAMED_IMPORTS
PATTERN_RESTRICTIONS = #:patterns RENAMED_IMPORTS
RENAMED_IMPORTS = RENAMED_IMPORT ...
RENAMED_IMPORT = [SYMBOL SYMBOL]

EXPORTS = (export EXPORT_INTERNALS ?)
EXPORT_INTERNALS = #:types EXPORT_IDS #:values EXPORT_IDS #:patterns EXPORT_IDS

TYPE_DEFINITIONS = (types TYPE_DEFINITION ...)
TYPE_DEFINITION = (define-type TYPE_NAME VARIANT_DEFINITION ...)
TYPE_NAME POLY = (SYMBOL SYMBOLS?)
TYPE_NAME MONO = SYMBOL
VARIANT_DEFINITION = (SYMBOL FIELD_DEFINITION ...)
FIELD_DEFINITION = [SYMBOL : TYPE]

TYPE NAME = SYMBOL
TYPE APP = (SYMBOL TYPE ...)


DEFINITION POLY = (define (SYMBOL ...) (SYMBOL ARG ...) : TYPE BLOCK
DEFINITION MONO = (define (SYMBOL ARG ...) : TYPE BLOCK

BLOCK = BLOCK_DEFINITION ... EXPR

BLOCK_DEFINITION = (match-define PATTERN EXPR)

PATTERN = SEXP
EXPR = SEXP
