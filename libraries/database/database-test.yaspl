#:module (database database-test)
#:import {
  (list)
  (maybe)
  (prim)
  (dict)
  (bytes)
  (yunit)
  (database relation-structures)
}
(export
  (#:values main))
(types)


(define (test-db) : Database
  (database
    (dict-add
      (make-dict bytes-cmp)
      #"modules"
      (relation (schema (make-dict bytes-cmp))
                (varargs list
                  (module-row #"bytes" #"bytes.yaspl")
                  (module-row #"list" #"list.yaspl")
                  (module-row #"maybe" #"maybe.yaspl"))))))

(define (module-row [name : Bytes] [path : Bytes]) : Row
  (row (dict-add (dict-add (make-dict bytes-cmp) 
                           #"name" (bytes-value name)) 
                 #"path" (bytes-value path))))





(define (main [args : Bytes] [stdin : InputPort] [stdout : OutputPort] [stderr : OutputPort]) : Int
  (yunit/main stderr
    (empty)))
