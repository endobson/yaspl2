(module module-signature
  (import
    (prim
      #:types (Bytes Int)
      #:values ()
      #:patterns ())
    (types
      #:types (Type)
      #:values ()
      #:patterns ())
    (list
      #:types (List)
      #:values ()
      #:patterns ())
    (dict
      #:types (Dict)
      #:values ()
      #:patterns ()))
  (export
    #:types (ModuleSignature PatternSignature)
    #:values (module-signature-name module-signature-value-exports module-signature-pattern-exports
              module-signature module-signature-type-bindings module-signature-known-functions
              module-signature-value-types pattern-signature)
    #:patterns (module-signature pattern-signature))
  (types
    (define-type ModuleSignature
      (module-signature
        [name : Bytes]
        [value-exports : (Dict Bytes Bytes)]
        [pattern-exports : (Dict Bytes PatternSignature)]
        [type-bindings : (Dict Bytes Type)]
        [value-types : (Dict Bytes Type)]
        [known-functions : (Dict Bytes Bytes)]))
    (define-type PatternSignature
      (pattern-signature
        [variant-tag : Int]
        [type-vars : (List Bytes)]
        [self-type : Type]
        [field-types : (List Type)]))))
