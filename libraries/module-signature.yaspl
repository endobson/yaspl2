#:module (module-signature)
#:import {
  (dict) {
    #:types
      Dict
  }
  (list) {
    #:types
      List
  }
  (module-name) {
    #:types
      ModName
  }
  (prim) {
    #:types
      Bytes
      Int
  }
  (types) {
    #:types
      Type
  }
}
(export
  #:types (ModuleSignature PatternSignature TypeSignature ValueSignature)
  #:values (module-signature-name module-signature-value-exports module-signature-pattern-exports
            module-signature module-signature-type-bindings module-signature-known-functions
            pattern-signature type-signature value-signature value-signature-symbol
            value-signature-type)
  #:patterns (module-signature pattern-signature type-signature value-signature))
(types
  (define-type ModuleSignature
    (module-signature
      [name : ModName]
      [value-exports : (Dict Bytes ValueSignature)]
      [pattern-exports : (Dict Bytes PatternSignature)]
      [type-bindings : (Dict Bytes Type)]
      [known-functions : (Dict Bytes Bytes)]))
  (define-type ValueSignature
    (value-signature
      [type : Type]
      [symbol : Bytes]))
  (define-type PatternSignature
    (pattern-signature
      [variant-name : Bytes]
      [variant-tag : Int]
      [type-vars : (List Bytes)]
      [self-type : Type]
      [field-types : (List Type)]
      [type-sig : TypeSignature]))
  (define-type TypeSignature
    (type-signature
      [variants : (List Bytes)])))
