#:module (machine-code-writer)
#:import {
  (assembler)
  (formats elf-writer)
  (io)
  (mach-o-writer)
  (system-abi)
  (maybe)
  (prim)
  (yaspl x86-64-assembly)
  (yaspl x86-64-assembly-printer)
}
(export
  (#:values write-library-object-file parse-system-abi))
(types)

(define (parse-system-abi [v : Bytes]) : (Maybe SystemAbi)
  (case v
    [#"osx" (just (osx-abi))]
    [#"linux" (just (linux-abi))]
    [_ (nothing)]))

(define (write-library-object-file
          [fragments : AssemblyFragments]
          [abi : SystemAbi]
          [output-file-name : Bytes])
  : Void
  (match-define (assembly-fragments text-fragments const-fragments) fragments)
  (match-define text-section (assemble-text-section text-fragments))
  (match-define const-section (assemble-const-section const-fragments))
  (case abi
    [(osx-abi)
     (write-mach-o-library text-section const-section output-file-name)]
    [(linux-abi)
     (call-with-output-file/void output-file-name
        (lambda ([output-port : OutputPort])
          (write-all-bytes (serialize-elf-library text-section const-section) output-port)))]))
